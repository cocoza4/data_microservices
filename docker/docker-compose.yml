version: "3.9"
services:

  kafka:
    image: 'bitnami/kafka:3.6'
    ports:
      - 9094:9094
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  mongodb:
    image: mongo:7.0.3
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME:${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD:${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE:products
    # volumes:
    #   - ../db:/data/db

  app:
    image: data_microservices:latest
    restart: always
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - 8080:8080
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DBNAME=productdb
      - SECRET_USER=${SECRET_USER}
      - SECRET_PASSWORD=${SECRET_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - KAFKA_URI=kafka
    depends_on:
      - kafka
      - mongodb

  # mongo-client:
  #   image: mongo-express:1.0.0-20
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
  #     - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017
  #   depends_on:
  #     - mongodb
  #   networks: 
  #     - mongo-compose-network
